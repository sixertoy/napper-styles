$BorderStyle: solid;
$BorderSizes: () !default;
$BorderRadiusSizes: () !default;

@each $size in $BorderSizes {
  $sides: (all, topbottom, leftright, top, left, right, bottom);

  // convert value to SASS variables with unit
  $pixelValue: number-to-pixel($size);

  @each $side in $sides {
    @if $side == 'all' {
      .b#{$size} {
        @include rem(border-width, $pixelValue);

        border-style: $BorderStyle;
      }
    }

    @else if $side == 'topbottom' {
      .by#{$size} {
        @include rem(border-top-width, $pixelValue);
        @include rem(border-bottom-width, $pixelValue);

        border-style: $BorderStyle;
      }
    }

    @else if $side == 'leftright' {
      .bx#{$size} {
        @include rem(border-left-width, $pixelValue);
        @include rem(border-right-width, $pixelValue);

        border-style: $BorderStyle;
      }
    }

    @else {
      .b#{str-slice($side, 0, 1)}#{$size} {
        @include rem(border-#{$side}-width, $pixelValue);

        border-style: $BorderStyle;
      }
    }
  }
}

@each $size in $BorderRadiusSizes {
  $pixelValue: number-to-pixel($size);

  @each $side in $sides {
    @if $side == 'all' {
      .r#{$size} {
        @include rem(border-radius, $pixelValue);
      }
    }
    // rtlN, rtrN, rblN, rbrN
    //
    // rrN
    // border-top-right-radius
    // border-bottom-right-radius
    //
    // rlN
    // border-top-left-radius
    // border-bottom-left-radius
    //
    // rtN
    // border-top-left-radius
    // border-top-right-radius
    //
    // .rbN
    // border-bottom-left-radius
    // border-bottom-right-radius
  }
}
